[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "qloo-ai-concierge"
version = "1.0.0"
description = "AI-powered hotel concierge system with Qloo cultural intelligence"
authors = [
    {name = "Bahadır Çiloğlu", email = "bahadir@example.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "fastapi>=0.104.0,<0.105.0",
    "uvicorn[standard]>=0.24.0,<0.25.0",
    "pydantic>=2.5.0,<3.0.0",
    "pydantic-settings>=2.1.0,<3.0.0",
    "httpx>=0.25.0,<0.26.0",
    "aiohttp>=3.9.0,<4.0.0",
    "requests>=2.31.0,<3.0.0",
    "aiofiles>=23.2.0,<24.0.0",
    "google-generativeai>=0.3.0,<1.0.0",
    "openai>=1.3.0,<2.0.0",
    "python-multipart>=0.0.6,<1.0.0",
    "python-dotenv>=1.0.0,<2.0.0",
    "psutil>=5.9.0,<6.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0,<8.0.0",
    "pytest-asyncio>=0.21.0,<1.0.0",
    "pytest-cov>=4.1.0,<5.0.0",
    "black>=23.12.0,<24.0.0",
    "isort>=5.13.0,<6.0.0",
    "flake8>=7.0.0,<8.0.0",
    "mypy>=1.8.0,<2.0.0",
    "safety>=3.6.0,<4.0.0",
    "bandit>=1.7.0,<2.0.0",
]

[project.urls]
Homepage = "https://github.com/bahadirciloglu/qloo-ai-concierge"
Repository = "https://github.com/bahadirciloglu/qloo-ai-concierge"
Documentation = "https://github.com/bahadirciloglu/qloo-ai-concierge#readme"
Issues = "https://github.com/bahadirciloglu/qloo-ai-concierge/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["app*"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
